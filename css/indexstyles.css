/* https://colors.co/f7fff7-343434-2f3061-ffe66d-a1c6d7
Color pallette
#F7FFF7- Almost white
#343434 - dark grey- almost black
#2F3061 - blue dark
#FFE66D - Yellow
#A1C6d7 - Blue light */

/*Global styles
---------------------------*/
body, h1, h2, p {
  margin: 0;
  padding: 0;
}

.container {
    text-align: center; /* Center align the text content */
}
.container h1 {
  font-size: 3.5em;
  font-family: "Helvetica Neue", Arial, sans-serif; /* Adjust the margin-top as needed */
  margin-bottom: 0px; /* Adjust the margin-bottom as needed */
  padding: 0px; /* Adjust the padding as needed */
  display: flex;
  align-items: center;
  justify-content: center;
}
body {
  font-family: Arial, sans-serif;
  background-color: #f0f0f0;
  padding: 20px;
}

header {
  background-color: #333;
  color: #fff;
  padding: 10px 0;
  position: relative; /* Add relative positioning to allow z-index */
  z-index: 2; /* Ensure the header is above the banner */
}

/* Navigation bar----------------- */
.NavigationBar {
  list-style: none;
  padding: 0;
  display: flex;
  justify-content: center; /* Align items horizontally at the center */
}

.NavigationBar li {
  margin: 0 50px;
  font-size: 2em;
}
.NavigationBar a {
  text-decoration: none; /* Remove underline from links */
}

.main {
  max-width: 800px; /* Adjust the maximum width as needed */
  margin: 10 auto;
  padding: 20px;
  text-align: justify; /* Align text inside main */
}
.Information {
  text-align: justify;
}

.Information h2 {
  font-size: 1.5em; /* Adjust the font size as needed */
  text-align: center; /* Center the heading */
  margin-bottom: 10px; /* Add space between headings and paragraphs */
}

.Information p {
  font-size: 1.0em; /* Adjust the font size as needed */
  text-align: center;
  margin-bottom: 20px; /* Add space between paragraphs */
}

body, html {
  margin: 0;
  padding: 0;
  height: 100%;
}

.hero {
  position: relative;
  text-align: center;
  overflow: hidden;
}

img {
  width: 100%;
  height: auto;
  min-width: 100%; /* Ensure the image covers the entire width */
  min-height: 100%; /* Maintain aspect ratio */
  object-fit: cover; /* This ensures the image covers the entire container */
}

.overlay {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.5); /* Adjust the opacity as needed */
}

.text-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 100%; /* Adjust to make the text container span the full width */
  text-align: center;
  color: white; /* Text color */
  z-index: 2; /* Ensure text is on top of the overlay */
  padding: 20px; /* Add padding as needed */
}
.text-container h3 {
  font-size: 2.0em; /* Adjust the font size as needed */
  padding: 50px; 
}

.text-container h4 {
  font-size: 1.5em; /* Adjust the font size as needed */
}

.hero {
  text-align: center;
  background-color: #007BFF;
  color: #fff;
  padding: 40px;
}

.content {
  background-color: #fff;
  padding: 20px;
}
.section-container {
  display: flex;
  justify-content: space-between;
}

.section {
  width: 48%; /* Adjusted width to leave some space between sections */
  padding: 5px;
  border: 1px solid #ccc;
  border-radius: 8px;

  
}

.section img {
  max-width: 100%;
  height: auto;
  border-radius: 8px;
}

footer {
  text-align: center;
  background-color: #333;
  color: #fff;
  padding: 10px 0;
  clear: both; /* Clear floats before the footer */
  position: relative; /* Ensure relative positioning */
  margin-top: 200px; /* Adjust margin as needed */
}


/*Yes, for the technique mentioned in point 4 (srcset attribute), you would typically create different versions of the same image with different resolutions and save them with specific names. This allows the browser to choose the appropriate image based on the user's device and screen size.

Here's a breakdown of the process:

Create Different Versions:

Create multiple versions of your image with different resolutions. For example, you might have versions with widths of 480 pixels, 960 pixels, and 1920 pixels.
Save with Specific Names:

Save each version with a specific naming convention to indicate its width. For example:
image-480.jpg
image-960.jpg
image-1920.jpg
Use srcset Attribute:

In your HTML, use the srcset attribute to specify the different image versions and their widths. Also, provide a default image using the src attribute.
html
Copy code
<img srcset="img/image-480.jpg 480w,
             img/image-960.jpg 960w,
             img/image-1920.jpg 1920w"
     sizes="(max-width: 480px) 100vw,
            (max-width: 960px) 50vw,
            100vw"
     src="img/image-960.jpg" alt="Image 1">
In this example, the browser will choose the appropriate image based on the user's screen width. If the screen width is less than or equal to 480 pixels, it will use image-480.jpg; if it's less than or equal to 960 pixels, it will use image-960.jpg, and so on.

This technique is useful for optimizing image loading on different devices, ensuring that users receive images that are suitable for their screen sizes and resolutions. It can improve performance and reduce the amount of data transferred, especially on mobile devices with smaller screens.*/